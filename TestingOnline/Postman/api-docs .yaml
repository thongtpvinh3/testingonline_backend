openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /testpage/setisdone/{id}:
    put:
      tags:
      - candidate-controller
      operationId: setTestIsDone
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/updatetest/{id}:
    put:
      tags:
      - staff-controller
      operationId: updateTest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/updatemcanswer/{idQuestion}:
    put:
      tags:
      - staff-controller
      operationId: updateMCAnswerForQuestion
      parameters:
      - name: idQuestion
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleChoiceQuestion'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/updateessayanswer/{idQuestion}:
    put:
      tags:
      - staff-controller
      operationId: updateEssayAnswerForQuestion
      parameters:
      - name: idQuestion
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EssayQuestion'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/editquestion/{id}:
    put:
      tags:
      - staff-controller
      operationId: editQuestion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/addtestforcandidate/{idTest}/{idCandidate}:
    put:
      tags:
      - staff-controller
      operationId: addTestForCandidate
      parameters:
      - name: idTest
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: idCandidate
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/addquestiontotest/{idTest}/{idQuestion}:
    put:
      tags:
      - staff-controller
      operationId: addQuestionToTest
      parameters:
      - name: idTest
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: idQuestion
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/addanswertoquestion/{idAnswer}/{idQuestion}:
    put:
      tags:
      - staff-controller
      operationId: addAnswerToTest
      parameters:
      - name: idAnswer
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: idQuestion
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/settesttime/{idTest}:
    post:
      tags:
      - staff-controller
      operationId: setTestTime
      parameters:
      - name: idTest
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalTime'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/logout:
    post:
      tags:
      - staff-controller
      operationId: logout
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /staff/addtest:
    post:
      tags:
      - staff-controller
      operationId: addTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/addsubject:
    post:
      tags:
      - staff-controller
      operationId: addNewSubject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/addquestion:
    post:
      tags:
      - staff-controller
      operationId: addQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/addnewlevel:
    post:
      tags:
      - staff-controller
      operationId: addNewLevel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Levels'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/addmultiplechoiceanswer/{idQuestion}:
    post:
      tags:
      - staff-controller
      operationId: addMultipleChoiceAnswerForQuestion
      parameters:
      - name: idQuestion
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleChoiceQuestion'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/addessayanswer/{idQuestion}:
    post:
      tags:
      - staff-controller
      operationId: addEssayAnswerForQuestion
      parameters:
      - name: idQuestion
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EssayQuestion'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/addcandidate:
    post:
      tags:
      - staff-controller
      operationId: addCandidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /jointest:
    post:
      tags:
      - app-controller
      operationId: joinTestWithCode
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /checklogin:
    post:
      tags:
      - app-controller
      operationId: checkLogin
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /testpage/test/{id}:
    get:
      tags:
      - candidate-controller
      operationId: toCandidateTestView
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /testingonline:
    get:
      tags:
      - app-controller
      operationId: toWebPage
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /staff/type/{id}:
    get:
      tags:
      - staff-controller
      operationId: testType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /staff/test:
    get:
      tags:
      - staff-controller
      operationId: toTestView
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /staff/listcandidate:
    get:
      tags:
      - staff-controller
      operationId: getAllCandidate
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Candidate'
  /staff/home:
    get:
      tags:
      - staff-controller
      operationId: toStaffView
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /staff/gettestbysubject/{subject}:
    get:
      tags:
      - staff-controller
      operationId: getTestBySubject
      parameters:
      - name: subject
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
  /staff/gettestbyname/{name}:
    get:
      tags:
      - staff-controller
      operationId: getTestByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
  /staff/gettestbylevel/{level}:
    get:
      tags:
      - staff-controller
      operationId: getTestByLevel
      parameters:
      - name: level
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
  /staff/gettestbyid/{id}:
    get:
      tags:
      - staff-controller
      operationId: getTestbyId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Test'
  /staff/gettestbydone/{done}:
    get:
      tags:
      - staff-controller
      operationId: getTestByDone
      parameters:
      - name: done
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
  /staff/gettestbycode/{code}:
    get:
      tags:
      - staff-controller
      operationId: getTestByCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Test'
  /staff/gettestbycandidateid/{id}:
    get:
      tags:
      - staff-controller
      operationId: getTestByCandidateId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
  /staff/getquestionbytype/{type}:
    get:
      tags:
      - staff-controller
      operationId: getQuestionByType
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
  /staff/getquestionbytest/{idTest}:
    get:
      tags:
      - staff-controller
      operationId: getQuestionByTestId
      parameters:
      - name: idTest
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
  /staff/getquestionbysubject/{subject}:
    get:
      tags:
      - staff-controller
      operationId: getQuestionBySubject
      parameters:
      - name: subject
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
  /staff/getquestionbylevel/{level}:
    get:
      tags:
      - staff-controller
      operationId: getQuestionByLevel
      parameters:
      - name: level
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
  /staff/getquestionbyid/{id}:
    get:
      tags:
      - staff-controller
      operationId: getQuestionById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Question'
  /staff/getalltest:
    get:
      tags:
      - staff-controller
      operationId: getAllTest
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
  /staff/getallsubject:
    get:
      tags:
      - staff-controller
      operationId: getallSubject
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
  /staff/getallquestion:
    get:
      tags:
      - staff-controller
      operationId: getAllQuestion
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
  /staff/getallmcanswer:
    get:
      tags:
      - staff-controller
      operationId: getAllMCAnswer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultipleChoiceQuestion'
  /staff/getalllevel:
    get:
      tags:
      - staff-controller
      operationId: getAllLevels
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Levels'
  /staff/getallessayanswer:
    get:
      tags:
      - staff-controller
      operationId: getAllEssayAnswer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EssayQuestion'
  /login:
    get:
      tags:
      - app-controller
      operationId: toLoginView
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /staff/deletetest/{id}:
    delete:
      tags:
      - staff-controller
      operationId: deleteTestbyId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/deletesubject/{id}:
    delete:
      tags:
      - staff-controller
      operationId: deleteSubjectById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/deletequestion/{id}:
    delete:
      tags:
      - staff-controller
      operationId: deleteQuestionbyId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/deletemultipleanswer/{idQuestion}/{idAnswer}:
    delete:
      tags:
      - staff-controller
      operationId: deleteMultipleAnswerFromQuestion
      parameters:
      - name: idQuestion
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: idAnswer
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/deletelevel/{id}:
    delete:
      tags:
      - staff-controller
      operationId: deleteLevel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
  /staff/delete/{id}:
    delete:
      tags:
      - staff-controller
      operationId: deleteCandidate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponeObject'
components:
  schemas:
    ResponeObject:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: object
    EssayQuestion:
      type: object
      properties:
        id:
          type: integer
          format: int32
        answer:
          type: string
        image:
          type: string
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    MultipleChoiceQuestion:
      type: object
      properties:
        id:
          type: integer
          format: int32
        isTrue:
          type: integer
          format: int32
        answer:
          type: string
        img:
          type: string
    Question:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: integer
          format: int32
        subject:
          type: integer
          format: int32
        content:
          type: string
        level:
          type: integer
          format: int32
        multipleChoiceQuestions:
          type: array
          items:
            $ref: '#/components/schemas/MultipleChoiceQuestion'
        essayQuestion:
          $ref: '#/components/schemas/EssayQuestion'
        typeToString:
          type: string
    Test:
      type: object
      properties:
        id:
          type: integer
          format: int32
        subject:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        time:
          $ref: '#/components/schemas/LocalTime'
        name:
          type: string
        isDone:
          type: integer
          format: int32
        codeTest:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    Subject:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Levels:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Candidate:
      type: object
      properties:
        id:
          type: integer
          format: int32
        idTest:
          type: string
        name:
          type: string
        level:
          type: integer
          format: int32
        phone:
          type: string
        email:
          type: string
        position:
          type: string
        testTime:
          type: string
          format: date-time
        englishMark:
          type: number
          format: float
        codingMark:
          type: number
          format: float
        knowledgeMark:
          type: number
          format: float
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test'
