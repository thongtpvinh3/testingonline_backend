version: '3.7'

# Define services
services:
  # App backend service
  # app-server:
  #   # Configuration for building the docker image for the backend service
  #   build:
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
  #   restart: always
  #   depends_on:
  #     - db # This service depends on mysql. Start that first.
  #   environment:
  #     # Pass environment variables to the service
  #     SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/testingonline?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
  #     SPRING_DATASOURCE_USERNAME: testingonline
  #     SPRING_DATASOURCE_PASSWORD: testingonline
  #   networks:
  #     # Networks to join (Services on the same network can communicate with each other using their name)
  #     - testingonline

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3307:3306"
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: testingonline
      MYSQL_USER: testingonline
      MYSQL_PASSWORD: testingonline
      MYSQL_ROOT_PASSWORD: "123456"
    volumes:
      - ./data/mysql:/var/lib/mysql

  testing-online:
    restart: always
    build: ./
    image: nguyenddthong/testingonline:v1.1
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    volumes:
      - ./application.properties:/app/application.properties
    environment:
      - REDIS_URL=redis://redis:6379

  redis:
    image: redis:6-alpine
    hostname: redis
    ports:
      - 6380:6379
    volumes:
      - ./data/redis:/data
      
#  zookeeper:
#    image: debezium/zookeeper:latest
#    container_name: zookeeper
#    ports:
#      - 2181:2181
#      - 2888:2888
#      - 3888:3888
#
#  kafka:
#    image: debezium/kafka:latest
#    ports:
#      - 9092:9092
#    container_name: kafka
#    links:
#      - zookeeper
#    environment:
#      ZOOKEEPER_CONNECT: zookeeper:2181
#      BROKER_ID: 1
#      LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
#      
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
#    ports:
#      - 9200:9200
#    container_name: elasticsearch
#    environment:
#      - http.host=0.0.0.0
#      - transport.host=127.0.0.1
#      - xpack.security.enabled=false
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    volumes:
#      - ./data/elasticsearch:/var/lib/elasticsearch
#      
#  connect:
#    image: debezium/connect-jdbc-es:latest
#    build:
#      context: debezium-jdbc-es
#      args:
#        DEBEZIUM_VERSION: latest
#    container_name: connect
#    ports:
#      - 8083:8083
#    links:
#      - kafka
#      - zookeeper
#      - elasticsearch
#      - mysql
#    environment:
#      - BOOTSTRAP_SERVERS=kafka:9092
#      - GROUP_ID=1
#      - CONFIG_STORAGE_TOPIC=my_connect_configs
#      - OFFSET_STORAGE_TOPIC=my_connect_offsets
#      - STATUS_STORAGE_TOPIC=my_source_connect_statuses